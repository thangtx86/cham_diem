<!DOCTYPE html>
<html>
    <head>
        <title>Key Combination Game</title>
    </head>
    <body>
        <div>
            <p>Red Team: <span id="redScore">0</span></p>
            <p>Blue Team: <span id="blueScore">0</span></p>
        </div>

        <script>
            const keyCombinations = [
                { keys: ['4', 'R', 'F', 'V'], score: 1, team: 'red' },
                { keys: ['1', 'Q', 'A', 'Z'], score: 2, team: 'red' },
                { keys: ['3', 'E', 'D', 'C'], score: 3, team: 'red' },
                { keys: ['7', 'U', 'J', 'M'], score: 1, team: 'blue' },
                { keys: ['2', 'W', 'S', 'X'], score: 2, team: 'blue' },
                { keys: ['8', 'I', 'K', ','], score: 3, team: 'blue' }
            ];

            function isSubsetArray(subArray, mainArray) {
                return subArray.every((item) => mainArray.includes(item));
            }
            function equalsElement(arr) {
                // Sắp xếp mảng để đảm bảo không quan trọng vị trí sắp xếp
                const sortedArr = arr.slice().sort();

                // Kiểm tra xem hai phần tử đầu và hai phần tử cuối có giống nhau không
                if (
                    sortedArr[0] === sortedArr[1] &&
                    sortedArr[2] === sortedArr[3]
                ) {
                    return true;
                } else {
                    return false;
                }
            }
            const teamScores = {
                red: 0,
                blue: 0
            };

            let lastKeyPressTime = 0;
            let pressedKeys = [];
            let isFitTime = false;
            let isHandled = false;
            let isPlus = false;
            function handleKeyUp(event) {
                const currentTime = Date.now();
                if (currentTime - lastKeyPressTime >= 2000) {
                    pressedKeys = [];
                }

                const keyPressed = event.key.toUpperCase();

                pressedKeys.push(keyPressed);

                console.log(pressedKeys);
                console.log(isFitTime);
                if (pressedKeys.length == 3) {
                    const foundCombinations = keyCombinations.filter(
                        (combination) =>
                            isSubsetArray(pressedKeys, combination.keys)
                    );
                    for (const combination of keyCombinations) {
                        const keysInCombination = combination.keys.filter(
                            (key) => pressedKeys.includes(key)
                        );
                        console.log('======: ' + keysInCombination);
                        if (keysInCombination.length == 3) {
                            const team = combination.team;
                            teamScores[team] += combination.score;
                            document.getElementById(
                                `${team}Score`
                            ).textContent = teamScores[team];
                        }
                    }
                    console.log('++++:::' + JSON.stringify(foundCombinations));
                }
                if (pressedKeys.length == 4) {
                    if (equalsElement(pressedKeys)) {
                        for (const combination of keyCombinations) {
                            const keysInCombination = combination.keys.filter(
                                (key) => pressedKeys.slice(0, 2).includes(key)
                            );
                            // console.log('======: ' + keysInCombination);
                            if (keysInCombination.length == 2) {
                                const team = combination.team;
                                teamScores[team] += combination.score;
                                document.getElementById(
                                    `${team}Score`
                                ).textContent = teamScores[team];
                            }
                            // if (pressedKeys.length == 4) {
                            //     pressedKeys = [];
                            // }
                        }
                    }
                    console.log('equalsElement:' + equalsElement(pressedKeys));
                    pressedKeys = [];
                }

                // isHandled = true;
                lastKeyPressTime = currentTime;
            }

            document.addEventListener('keyup', handleKeyUp);
        </script>
    </body>
</html>
